import React, { useState } from 'react';
import { FormInputContainer, ErrorText } from './styles';

interface IProps {
  name: string;
  type: string;
  error?: boolean;
  errorText?: string;
  value?: string;
  placeholder?: string;
  onChange: (text: string) => void;
}

function FormInput(props: IProps) {
  const {
    name,
    type,
    value,
    error,
    errorText,
    placeholder = '',
    onChange
  } = props;
  const [reveal, setReveal] = useState<boolean>(false);

  if (type === 'password') {
    return (
      <>
        <FormInputContainer>
          <input
            type={reveal ? 'text' : 'password'}
            name={name}
            autoComplete='false'
            placeholder={placeholder}
            className={error ? 'error' : ''}
            onChange={e => onChange(e.target.value)}
          />
          <div onClick={e => setReveal(!reveal)} className='reveal'>
            {reveal ? HideIcon : RevealIcon}
          </div>
        </FormInputContainer>
        {error && errorText && <ErrorText>{errorText}</ErrorText>}
      </>
    );
  } else {
    return (
      <>
        <FormInputContainer>
          <input
            type={type}
            name={name}
            autoComplete='false'
            placeholder={placeholder}
            onChange={e => onChange(e.target.value)}
            className={error ? 'error' : ''}
            value={value}
          />
        </FormInputContainer>
        {error && errorText && <ErrorText>{errorText}</ErrorText>}
      </>
    );
  }
}

const RevealIcon = (
  <svg
    width='20'
    height='16'
    viewBox='0 0 20 16'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      d='M0.984375 8C1.76771 3.73333 5.50688 0.5 10.0002 0.5C14.4935 0.5 18.2319 3.73333 19.016 8C18.2327 12.2667 14.4935 15.5 10.0002 15.5C5.50688 15.5 1.76854 12.2667 0.984375 8ZM10.0002 12.1667C11.1053 12.1667 12.1651 11.7277 12.9465 10.9463C13.7279 10.1649 14.1669 9.10507 14.1669 8C14.1669 6.89493 13.7279 5.83512 12.9465 5.05372C12.1651 4.27232 11.1053 3.83333 10.0002 3.83333C8.89514 3.83333 7.83533 4.27232 7.05393 5.05372C6.27253 5.83512 5.83354 6.89493 5.83354 8C5.83354 9.10507 6.27253 10.1649 7.05393 10.9463C7.83533 11.7277 8.89514 12.1667 10.0002 12.1667ZM10.0002 10.5C9.33717 10.5 8.70128 10.2366 8.23244 9.76777C7.7636 9.29893 7.50021 8.66304 7.50021 8C7.50021 7.33696 7.7636 6.70107 8.23244 6.23223C8.70128 5.76339 9.33717 5.5 10.0002 5.5C10.6632 5.5 11.2991 5.76339 11.768 6.23223C12.2368 6.70107 12.5002 7.33696 12.5002 8C12.5002 8.66304 12.2368 9.29893 11.768 9.76777C11.2991 10.2366 10.6632 10.5 10.0002 10.5Z'
      fill='#ABBACE'
    />
  </svg>
);

const HideIcon = (
  <svg
    width='20'
    height='18'
    viewBox='0 0 20 18'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
  >
    <path
      d='M14.9017 15.0809C13.436 16.0105 11.7356 16.5028 10 16.5001C5.50669 16.5001 1.76836 13.2667 0.984192 9.00006C1.34255 7.05899 2.31888 5.2858 3.76753 3.94506L1.16003 1.34006L2.33919 0.160889L18.8384 16.6609L17.6592 17.8392L14.9009 15.0809H14.9017ZM4.94586 5.12505C3.81336 6.15471 3.02446 7.50737 2.68586 9.00006C2.9461 10.1388 3.46858 11.201 4.21169 12.1022C4.95481 13.0034 5.89805 13.7187 6.96632 14.1911C8.03459 14.6636 9.1984 14.8801 10.3651 14.8235C11.5318 14.7669 12.6692 14.4387 13.6867 13.8651L11.9967 12.1751C11.2773 12.6282 10.4252 12.8235 9.58022 12.7288C8.73526 12.634 7.94756 12.255 7.34633 11.6537C6.74511 11.0525 6.36605 10.2648 6.27133 9.41986C6.17661 8.57489 6.37185 7.72281 6.82503 7.00339L4.94586 5.12505ZM10.7617 10.9401L8.06003 8.23839C7.91175 8.61584 7.87685 9.02835 7.95961 9.42534C8.04238 9.82233 8.23921 10.1865 8.52596 10.4733C8.81271 10.76 9.17691 10.9569 9.57391 11.0396C9.9709 11.1224 10.3834 11.0875 10.7609 10.9392L10.7617 10.9401ZM17.3392 12.8267L16.1467 11.6351C16.7038 10.8411 17.1004 9.94604 17.3142 9.00006C17.0877 8.00816 16.6619 7.07268 16.0626 6.25047C15.4634 5.42826 14.7032 4.73649 13.8283 4.21723C12.9533 3.69796 11.9819 3.36203 10.9731 3.22986C9.96434 3.09769 8.9392 3.17204 7.96003 3.44839L6.64503 2.13339C7.68419 1.72506 8.81669 1.50006 10 1.50006C14.4934 1.50006 18.2317 4.73339 19.0159 9.00006C18.7605 10.3881 18.1866 11.698 17.3392 12.8267ZM9.76919 5.25672C10.2996 5.22394 10.831 5.30428 11.328 5.4924C11.825 5.68053 12.2764 5.97215 12.6522 6.34793C13.0279 6.72371 13.3196 7.17508 13.5077 7.6721C13.6958 8.16913 13.7761 8.70046 13.7434 9.23089L9.76836 5.25672H9.76919Z'
      fill='#3066DB'
    />
  </svg>
);

export default FormInput;
